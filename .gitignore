.DS_Store

#Frontend ignores

# Created by https://www.toptal.com/developers/gitignore/api/swift,xcode,cocoapods
# Edit at https://www.toptal.com/developers/gitignore?templates=swift,xcode,cocoapods

### CocoaPods ###
## CocoaPods GitIgnore Template

# CocoaPods - Only use to conserve bandwidth / Save time on Pushing
#           - Also handy if you have a large number of dependant pods
#           - AS PER https://guides.cocoapods.org/using/using-cocoapods.html NEVER IGNORE THE LOCK FILE
frontend/Dogking/Pods/

### Swift ###
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
frontend/Dogking/xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
frontend/Dogking/build/
frontend/Dogking/DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
frontend/Dogking/timeline.xctimeline
frontend/Dogking/playground.xcworkspace

# Swift Package Manager
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

frontend/Dogking/.build/

# CocoaPods
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
# Pods/
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

frontend/Dogking/Carthage/Build/

# Accio dependency management
frontend/Dogking/Dependencies/
frontend/Dogking/.accio/

# fastlane
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

frontend/Dogking/fastlane/report.xml
frontend/Dogking/fastlane/Preview.html
frontend/Dogking/fastlane/screenshots/**/*.png
frontend/Dogking/fastlane/test_output

# Code Injection
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

frontend/Dogking/iOSInjectionProject/

### Xcode ###

## Xcode 8 and earlier

### Xcode Patch ###
*.xcodeproj/*
!*.xcodeproj/project.pbxproj
!*.xcodeproj/xcshareddata/
!*.xcodeproj/project.xcworkspace/
!*.xcworkspace/contents.xcworkspacedata
/*.gcno
**/xcshareddata/WorkspaceSettings.xcsettings

# End of https://www.toptal.com/developers/gitignore/api/swift,xcode,cocoapods

#backend

# Created by https://www.toptal.com/developers/gitignore/api/java,gradle,intellij,database
# Edit at https://www.toptal.com/developers/gitignore?templates=java,gradle,intellij,database

### Database ###
*.accdb
*.db
*.dbf
*.mdb
*.pdb
*.sqlite3
*.db-shm
*.db-wal

### Intellij ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
backend/Dogking/.idea/**/workspace.xml
backend/Dogking/.idea/**/tasks.xml
backend/Dogking/.idea/**/usage.statistics.xml
backend/Dogking/.idea/**/dictionaries
backend/Dogking/.idea/**/shelf

# AWS User-specific
backend/Dogking/.idea/**/aws.xml

# Generated files
backend/Dogking/.idea/**/contentModel.xml

# Sensitive or high-churn files
backend/Dogking/.idea/**/dataSources/
backend/Dogking/.idea/**/dataSources.ids
backend/Dogking/.idea/**/dataSources.local.xml
backend/Dogking/.idea/**/sqlDataSources.xml
backend/Dogking/.idea/**/dynamic.xml
backend/Dogking/.idea/**/uiDesigner.xml
backend/Dogking/.idea/**/dbnavigator.xml

# Gradle
backend/Dogking/.idea/**/gradle.xml
backend/Dogking/.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/artifacts
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
backend/Dogking/cmake-build-*/

# Mongo Explorer plugin
backend/Dogking/.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
backend/Dogking/out/

# mpeltonen/sbt-idea plugin
backend/Dogking/.idea_modules/

# JIRA plugin
backend/Dogking/atlassian-ide-plugin.xml

# Cursive Clojure plugin
backend/Dogking/.idea/replstate.xml

# SonarLint plugin
backend/Dogking/.idea/sonarlint/

# Crashlytics plugin (for Android Studio and IntelliJ)
backend/Dogking/com_crashlytics_export_strings.xml
backend/Dogking/crashlytics.properties
backend/Dogking/crashlytics-build.properties
backend/Dogking/fabric.properties

# Editor-based Rest Client
backend/Dogking/.idea/httpRequests

# Android studio 3.1+ serialized cache file
backend/Dogking/.idea/caches/build_file_checksums.ser

### Intellij Patch ###
# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721

# *.iml
# modules.xml
# .idea/misc.xml
# *.ipr

# Sonarlint plugin
# https://plugins.jetbrains.com/plugin/7973-sonarlint
backend/Dogking/.idea/**/sonarlint/

# SonarQube Plugin
# https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin
backend/Dogking/.idea/**/sonarIssues.xml

# Markdown Navigator plugin
# https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced
backend/Dogking/.idea/**/markdown-navigator.xml
backend/Dogking/.idea/**/markdown-navigator-enh.xml
backend/Dogking/.idea/**/markdown-navigator/

# Cache file creation bug
# See https://youtrack.jetbrains.com/issue/JBR-2257
backend/Dogking/.idea/$CACHE_FILE$

# CodeStream plugin
# https://plugins.jetbrains.com/plugin/12206-codestream
backend/Dogking/.idea/codestream.xml

# Azure Toolkit for IntelliJ plugin
# https://plugins.jetbrains.com/plugin/8053-azure-toolkit-for-intellij
backend/Dogking/.idea/**/azureSettings.xml

### Java ###
# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
backend/Dogking/.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
replay_pid*

### Gradle ###
backend/Dogking/.gradle
backend/Dogking/**/build/
backend/Dogking/!src/**/build/

# Ignore Gradle GUI config
backend/Dogking/gradle-app.setting

# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)
backend/Dogking/!gradle-wrapper.jar

# Avoid ignore Gradle wrappper properties
backend/Dogking/!gradle-wrapper.properties

# Cache of project
backend/Dogking/.gradletasknamecache

# Eclipse Gradle plugin generated files
# Eclipse Core
backend/Dogking/.project
# JDT-specific (Eclipse Java Development Tools)
backend/Dogking/.classpath

### Gradle Patch ###
# Java heap dump
*.hprof

# End of https://www.toptal.com/developers/gitignore/api/java,gradle,intellij,database
